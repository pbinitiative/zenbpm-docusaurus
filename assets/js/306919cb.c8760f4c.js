"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9360],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>t});var d=r(96540);const i={},s=d.createContext(i);function c(e){const n=d.useContext(s);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),d.createElement(s.Provider,{value:n},e.children)}},79093:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>x,frontMatter:()=>c,metadata:()=>d,toc:()=>h});const d=JSON.parse('{"id":"reference/configuration","title":"Configuration","description":"Application configuration can be supplied through:","source":"@site/docs/reference/configuration.md","sourceDirName":"reference","slug":"/reference/configuration","permalink":"/reference/configuration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":120,"frontMatter":{"sidebar_position":120},"sidebar":"docs","previous":{"title":"OpenTelemetry","permalink":"/reference/opentelemetry"},"next":{"title":"zenctl","permalink":"/reference/zenctl"}}');var i=r(74848),s=r(28453);const c={sidebar_position:120},t="Configuration",l={},h=[{value:"Root Configuration:",id:"root-configuration",level:2},{value:"Server Configuration: <code>Server</code>",id:"server-configuration-server",level:2},{value:"GRPC Server Configuration: <code>GrpcServer</code>",id:"grpc-server-configuration-grpcserver",level:2},{value:"Cluster Configuration: <code>Cluster</code>",id:"cluster-configuration-cluster",level:2},{value:"Raft Configuration: <code>ClusterRaft</code>",id:"raft-configuration-clusterraft",level:3},{value:"Persistence Configuration: <code>Persistence</code>",id:"persistence-configuration-persistence",level:2},{value:"Tracing Configuration: <code>Tracing</code>",id:"tracing-configuration-tracing",level:2},{value:"Example YAML Configuration",id:"example-yaml-configuration",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,i.jsx)(n.p,{children:"Application configuration can be supplied through:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"file: configured by env CONFIG_FILE (yaml/json format)"}),"\n",(0,i.jsx)(n.li,{children:"env variables"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"root-configuration",children:"Root Configuration:"}),"\n",(0,i.jsx)(n.p,{children:"Top-level configuration object."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"httpServer"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"HttpServer"})}),(0,i.jsx)(n.td,{children:"Configuration of the public REST server"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"grpcServer"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"GrpcServer"})}),(0,i.jsx)(n.td,{children:"Configuration of the public GRPC server"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"tracing"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Tracing"})}),(0,i.jsx)(n.td,{children:"Tracing and observability configuration"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"cluster"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Cluster"})}),(0,i.jsx)(n.td,{children:"Cluster and Raft consensus configuration"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"server-configuration-server",children:["Server Configuration: ",(0,i.jsx)(n.code,{children:"Server"})]}),"\n",(0,i.jsxs)(n.p,{children:["Defines settings for the public ",(0,i.jsx)(n.strong,{children:"REST API server"}),"."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Env Variable"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"context"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"REST_API_CONTEXT"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/"})}),(0,i.jsx)(n.td,{children:"Base context path for the API"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"addr"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"REST_API_ADDR"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:":8080"})}),(0,i.jsx)(n.td,{children:"Address the server binds to"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"grpc-server-configuration-grpcserver",children:["GRPC Server Configuration: ",(0,i.jsx)(n.code,{children:"GrpcServer"})]}),"\n",(0,i.jsxs)(n.p,{children:["Defines settings for the ",(0,i.jsx)(n.strong,{children:"GRPC API server"}),"."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Env Variable"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"addr"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"GRPC_API_ADDR"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:":9090"})}),(0,i.jsx)(n.td,{children:"Address the GRPC server listens on"})]})})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"cluster-configuration-cluster",children:["Cluster Configuration: ",(0,i.jsx)(n.code,{children:"Cluster"})]}),"\n",(0,i.jsxs)(n.p,{children:["Settings related to ",(0,i.jsx)(n.strong,{children:"clustering"}),", ",(0,i.jsx)(n.strong,{children:"internal communication"}),", and ",(0,i.jsx)(n.strong,{children:"Raft"})," consensus."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Env Variable"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"nodeId"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CLUSTER_NODE_ID"})}),(0,i.jsx)(n.td,{children:"\u2014"}),(0,i.jsx)(n.td,{children:"Unique node identifier"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"addr"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CLUSTER_RAFT_ADDR"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:":8090"})}),(0,i.jsx)(n.td,{children:"Bind address for internal Raft communication"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"adv"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CLUSTER_RAFT_ADV"})}),(0,i.jsxs)(n.td,{children:["(same as ",(0,i.jsx)(n.code,{children:"addr"}),")"]}),(0,i.jsx)(n.td,{children:"Advertised Raft address"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"raft"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ClusterRaft"})}),(0,i.jsx)(n.td,{children:"\u2014"}),(0,i.jsx)(n.td,{children:"\u2014"}),(0,i.jsx)(n.td,{children:"Raft-specific cluster settings"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"persistence"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Persistence"})}),(0,i.jsx)(n.td,{children:"\u2014"}),(0,i.jsx)(n.td,{children:"\u2014"}),(0,i.jsx)(n.td,{children:"Persistence and caching configuration"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h3,{id:"raft-configuration-clusterraft",children:["Raft Configuration: ",(0,i.jsx)(n.code,{children:"ClusterRaft"})]}),"\n",(0,i.jsx)(n.p,{children:"Raft consensus and cluster joining settings."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Env Variable"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"dir"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CLUSTER_RAFT_DIR"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"zen_bpm_node_data"})}),(0,i.jsx)(n.td,{children:"Path to local node data"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"nonVoter"})}),(0,i.jsx)(n.td,{children:"bool"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CLUSTER_RAFT_NON_VOTER"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsx)(n.td,{children:"Set node as non-voting member"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"joinAttempts"})}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CLUSTER_RAFT_JOIN_ATTEMPTS"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"5"})}),(0,i.jsx)(n.td,{children:"Number of join attempts"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"joinInterval"})}),(0,i.jsx)(n.td,{children:"duration"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CLUSTER_RAFT_JOIN_INTERVAL"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"2s"})}),(0,i.jsx)(n.td,{children:"Time interval between join attempts"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"joinAddresses"})}),(0,i.jsx)(n.td,{children:"[]string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CLUSTER_RAFT_JOIN_ADDRESSES"})}),(0,i.jsx)(n.td,{children:"\u2014"}),(0,i.jsx)(n.td,{children:"List of node addresses to join"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"bootstrapExpect"})}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CLUSTER_RAFT_BOOTSTRAP_EXPECT"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0"})}),(0,i.jsx)(n.td,{children:"Minimum nodes for bootstrap"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"bootstrapExpectTimeout"})}),(0,i.jsx)(n.td,{children:"duration"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CLUSTER_RAFT_EXPECT_BOOTSTRAP_TIMEOUT"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"10s"})}),(0,i.jsx)(n.td,{children:"Max timeout for expected bootstrap nodes"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"persistence-configuration-persistence",children:["Persistence Configuration: ",(0,i.jsx)(n.code,{children:"Persistence"})]}),"\n",(0,i.jsx)(n.p,{children:"Configuration for caching and storage."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Env Variable"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"procDefCacheTTL"})}),(0,i.jsx)(n.td,{children:"time.Duration"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"PERSISTENCE_PROC_DEF_CACHE_TTL_SECONDS"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"24h"})}),(0,i.jsx)(n.td,{children:"TTL for cached process definitions"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"procDefCacheSize"})}),(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"PERSISTENCE_PROC_DEF_CACHE_SIZE"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"200"})}),(0,i.jsx)(n.td,{children:"Max number of cached process definitions"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"rqlite"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"*RqLite"})}),(0,i.jsx)(n.td,{children:"\u2014"}),(0,i.jsx)(n.td,{children:"\u2014"}),(0,i.jsx)(n.td,{children:"Configuration for embedded RQLite database"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"tracing-configuration-tracing",children:["Tracing Configuration: ",(0,i.jsx)(n.code,{children:"Tracing"})]}),"\n",(0,i.jsx)(n.p,{children:"Distributed tracing settings using OpenTelemetry."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Env Variable"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"enabled"})}),(0,i.jsx)(n.td,{children:"bool"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"TRACING_ENABLED"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsx)(n.td,{children:"Enable or disable tracing"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"TRACING_APP_NAME"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ZenBPM"})}),(0,i.jsx)(n.td,{children:"Application name for tracing"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"transferHeaders"})}),(0,i.jsx)(n.td,{children:"[]string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"TRACING_TRANSFER_HEADERS"})}),(0,i.jsx)(n.td,{children:"\u2014"}),(0,i.jsx)(n.td,{children:"HTTP headers to propagate through trace context"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"endpoint"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"OTEL_EXPORTER_OTLP_ENDPOINT"})}),(0,i.jsx)(n.td,{children:"\u2014"}),(0,i.jsx)(n.td,{children:"OTLP exporter endpoint (e.g., for Jaeger/Tempo)"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"example-yaml-configuration",children:"Example YAML Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"name: zenbpm\nhttpServer:\n  context: /\n  addr: :8080\ngrpcServer:\n  addr: :9090\ncluster:\n  addr: localhost:8090\n  adv: localhost:8090\n  raft:\n    dir: node-1\n    bootstrapExpect: 1\n    bootstrapExpectTimeout: 30s\n    joinAttempts: 5\n    joinAddresses: \n      - localhost:8090\n  nodeId: node-1\ntracing:\n  enabled: true\n  endpoint: localhost:4318\n  name: ZenBPM\n"})})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);