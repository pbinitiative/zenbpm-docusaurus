"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4355],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(96540);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},88821:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"reference/bpmn-engine","title":"BPMN engine","description":"BPMN engine tries to adhere to the bpmn 2 specification and be compatible with Camunda 8.","source":"@site/docs/reference/bpmn-engine.md","sourceDirName":"reference","slug":"/reference/bpmn-engine","permalink":"/reference/bpmn-engine","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"Cluster","permalink":"/reference/cluster"},"next":{"title":"DMN engine","permalink":"/reference/dmn-engine"}}');var a=t(74848),s=t(28453);const r={sidebar_position:2},l="BPMN engine",d={},o=[{value:"Storage",id:"storage",level:2},{value:"Node processing in the engine",id:"node-processing-in-the-engine",level:2},{value:"Execution Tokens",id:"execution-tokens",level:3},{value:"Exclusive Gateway example",id:"exclusive-gateway-example",level:3},{value:"Parallel Gateway example",id:"parallel-gateway-example",level:3},{value:"Interacting with the BPMN engine",id:"interacting-with-the-bpmn-engine",level:2},{value:"Workers",id:"workers",level:2},{value:"Supported elements",id:"supported-elements",level:2},{value:"Start event",id:"start-event",level:3},{value:"End event",id:"end-event",level:3},{value:"Service task",id:"service-task",level:3},{value:"User task",id:"user-task",level:3},{value:"Business rule task",id:"business-rule-task",level:3},{value:"Call activity",id:"call-activity",level:3},{value:"Parallel gateway",id:"parallel-gateway",level:3},{value:"Inclusive gateway",id:"inclusive-gateway",level:3},{value:"Exclusive gateway",id:"exclusive-gateway",level:3},{value:"Event based gateway",id:"event-based-gateway",level:3},{value:"Message catch event",id:"message-catch-event",level:3},{value:"Link intermediate throw event",id:"link-intermediate-throw-event",level:3},{value:"Link intermediate catch event",id:"link-intermediate-catch-event",level:3},{value:"Timer intermediate catch event",id:"timer-intermediate-catch-event",level:3},{value:"Message throw event",id:"message-throw-event",level:3},{value:"Error event",id:"error-event",level:3},{value:"Boundary event",id:"boundary-event",level:3},{value:"Activity multi instance",id:"activity-multi-instance",level:3},{value:"Script task",id:"script-task",level:3},{value:"XML parser",id:"xml-parser",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"bpmn-engine",children:"BPMN engine"})}),"\n",(0,a.jsxs)(n.p,{children:["BPMN engine tries to adhere to the ",(0,a.jsx)(n.a,{href:"https://www.omg.org/spec/BPMN/2.0.2/PDF",children:"bpmn 2 specification"})," and be compatible with ",(0,a.jsx)(n.a,{href:"https://docs.camunda.io/",children:"Camunda 8"}),".\nThe engine can be used through the ZenBPM platform or as a ",(0,a.jsx)(n.a,{href:"https://pkg.go.dev/github.com/pbinitiative/zenbpm/pkg/bpmn",children:"standalone library"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["The engine is fully instrumented via ",(0,a.jsx)(n.a,{href:"https://opentelemetry.io/",children:"OpenTelemetry"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Tracing: Each process, token, and flow node has spans."}),"\n",(0,a.jsx)(n.li,{children:"Metrics: Tracks counts of started, ended processes, worker executions etc."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"storage",children:"Storage"}),"\n",(0,a.jsxs)(n.p,{children:["The engine uses a storage interface to interact with storage systems. ZenBPM platform implements a solution based on RqLite database. The codebase also provides a default implementation for in ",(0,a.jsx)(n.a,{href:"https://pkg.go.dev/github.com/pbinitiative/zenbpm/pkg/storage/inmemory",children:"memory storage"})," that is used by the engine's Unit tests."]}),"\n",(0,a.jsx)(n.h2,{id:"node-processing-in-the-engine",children:"Node processing in the engine"}),"\n",(0,a.jsx)(n.p,{children:"Internally the engine uses \"Tokens\" as a pointers that traverse the diagram and represent execution state.\nTokens are manipulated based on node logic (e.g., split for gateways, wait for messages/timers).\nOne loop through the engine's main loop means processing the token's flow node and outgoing sequence flows."}),"\n",(0,a.jsx)(n.h3,{id:"execution-tokens",children:"Execution Tokens"}),"\n",(0,a.jsx)(n.p,{children:"Tokens (ExecutionToken) track progress through flow nodes:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Key"}),": Unique identifier."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ElementId"}),": ID of the current BPMN element."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"State"}),": Running, Waiting, Completed, Failed."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"exclusive-gateway-example",children:"Exclusive Gateway example"}),"\n",(0,a.jsx)(n.p,{children:"The following example shows processing of an Exclusive Gateway."}),"\n",(0,a.jsx)(n.mermaid,{value:'flowchart LR\n subgraph s1["Token execution"]\n        n0["Previous node"]\n        n1["Exclusive gateway"]\n        n2["Node2"]\n        n3["Node3"]\n  end\n    n0 --\x3e|Token key 42 running|n1\n    n1 L_n1_n2_0@--\x3e|Token key:42</br>state:running|n2\n    n1 --\x3e n3\n\n    n1@{ shape: diam}\n     n0:::Hidden\n     n2:::Hidden\n     n3:::Hidden\n    classDef Hidden stroke-width:1px, stroke-dasharray:none, opacity: 10%\n    linkStyle 0 opacity: 50%\n\n    L_n1_n2_0@{ animation: fast } '}),"\n",(0,a.jsx)(n.p,{children:"Since Exclusive Gateway cannot create parallel flows the token gets reused and continues to flow through the diagram."}),"\n",(0,a.jsx)(n.h3,{id:"parallel-gateway-example",children:"Parallel Gateway example"}),"\n",(0,a.jsx)(n.p,{children:"The following example shows processing of a Parallel Gateway."}),"\n",(0,a.jsx)(n.mermaid,{value:'flowchart LR\n subgraph s1["Token execution"]\n        n0["Previous node"]\n        n1["Parallel gateway"]\n        n2["Node2"]\n        n3["Node3"]\n  end\n    n0 L_n0_n1_0@--\x3e|Token key:42</br>state:completed|n1\n    n1 L_n1_n2_0@--\x3e|Token key:43</br>state:running|n2\n    n1 L_n1_n3_0@--\x3e|Token key:44</br>state:running|n3\n\n    n1@{ shape: diam}\n     n0:::Previous\n     n2:::Hidden\n     n3:::Hidden\n    classDef Hidden stroke-width:1px, stroke-dasharray:none, opacity: 10%\n    classDef Previous stroke-width:1px, stroke-dasharray:none, opacity: 50%\n    linkStyle 0 opacity: 50%\n\n    L_n1_n2_0@{ animation: fast } \n    L_n1_n3_0@{ animation: fast }'}),"\n",(0,a.jsx)(n.p,{children:"To keep track of the parallel executions the token that activated the gateway is completed and outgoing parallel flows get assigned a new tokens that each represents a parallel execution flow."}),"\n",(0,a.jsx)(n.h2,{id:"interacting-with-the-bpmn-engine",children:"Interacting with the BPMN engine"}),"\n",(0,a.jsx)(n.h2,{id:"workers",children:"Workers"}),"\n",(0,a.jsx)(n.h2,{id:"supported-elements",children:"Supported elements"}),"\n",(0,a.jsx)(n.p,{children:"TODO: we should split these into separate pages with examples."}),"\n",(0,a.jsx)(n.h3,{id:"start-event",children:"Start event"}),"\n",(0,a.jsx)(n.p,{children:"Start event is fully supported."}),"\n",(0,a.jsx)(n.h3,{id:"end-event",children:"End event"}),"\n",(0,a.jsx)(n.p,{children:"End event is fully supported."}),"\n",(0,a.jsx)(n.h3,{id:"service-task",children:"Service task"}),"\n",(0,a.jsx)(n.p,{children:"Fully supported through external workers."}),"\n",(0,a.jsx)(n.h3,{id:"user-task",children:"User task"}),"\n",(0,a.jsx)(n.p,{children:"Fully supported through external workers."}),"\n",(0,a.jsx)(n.h3,{id:"business-rule-task",children:"Business rule task"}),"\n",(0,a.jsx)(n.admonition,{title:"Future plans",type:"note",children:(0,a.jsxs)(n.p,{children:["Supported through internal ",(0,a.jsx)(n.a,{href:"/reference/dmn-engine",children:"dmn engine"}),"."]})}),"\n",(0,a.jsx)(n.h3,{id:"call-activity",children:"Call activity"}),"\n",(0,a.jsx)(n.p,{children:"The subprocess for call activity is started on the same partition as the process that invoked it."}),"\n",(0,a.jsx)(n.h3,{id:"parallel-gateway",children:"Parallel gateway"}),"\n",(0,a.jsxs)(n.p,{children:["Current implementation handles parallel flows correctly if there is only one overlapping flow in the process instance. ",(0,a.jsx)(n.strong,{children:"Multiple recursive parallel flows have currently undefined behaviour."})]}),"\n",(0,a.jsx)(n.h3,{id:"inclusive-gateway",children:"Inclusive gateway"}),"\n",(0,a.jsx)(n.p,{children:"Inclusive gateway is fully supported."}),"\n",(0,a.jsx)(n.h3,{id:"exclusive-gateway",children:"Exclusive gateway"}),"\n",(0,a.jsx)(n.p,{children:"Exclusive gateway is fully supported."}),"\n",(0,a.jsx)(n.h3,{id:"event-based-gateway",children:"Event based gateway"}),"\n",(0,a.jsx)(n.p,{children:"Event based gateway currently supports message and timer events."}),"\n",(0,a.jsx)(n.h3,{id:"message-catch-event",children:"Message catch event"}),"\n",(0,a.jsx)(n.p,{children:"Message catch event is fully supported."}),"\n",(0,a.jsx)(n.h3,{id:"link-intermediate-throw-event",children:"Link intermediate throw event"}),"\n",(0,a.jsx)(n.p,{children:"Link intermediate throw event is fully supported."}),"\n",(0,a.jsx)(n.h3,{id:"link-intermediate-catch-event",children:"Link intermediate catch event"}),"\n",(0,a.jsx)(n.p,{children:"Link intermediate catch event is fully supported."}),"\n",(0,a.jsx)(n.h3,{id:"timer-intermediate-catch-event",children:"Timer intermediate catch event"}),"\n",(0,a.jsx)(n.p,{children:"Tiemr intermediate catch event is fully supported."}),"\n",(0,a.jsxs)(n.admonition,{title:"Future plans",type:"note",children:[(0,a.jsx)(n.h3,{id:"message-throw-event",children:"Message throw event"}),(0,a.jsx)(n.h3,{id:"error-event",children:"Error event"}),(0,a.jsx)(n.h3,{id:"boundary-event",children:"Boundary event"}),(0,a.jsx)(n.h3,{id:"activity-multi-instance",children:"Activity multi instance"}),(0,a.jsx)(n.h3,{id:"script-task",children:"Script task"})]}),"\n",(0,a.jsx)(n.h2,{id:"xml-parser",children:"XML parser"}),"\n",(0,a.jsx)(n.p,{children:"TODO: add information about how we are parsing xml definitions of processes"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);