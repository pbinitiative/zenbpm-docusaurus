"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1993],{22214:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/files/zenbpm-96e88eb05778408118a5a45ead2bfcc1.proto"},24063:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"reference/api-reference","title":"API Overview","description":"ZenBPM provides comprehensive APIs for interacting with the BPMN engine. This section documents the available APIs and how to use them.","source":"@site/docs/reference/api-reference.md","sourceDirName":"reference","slug":"/reference/api-reference","permalink":"/zenbpm-docusaurus/reference/api-reference","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"docs","previous":{"title":"Storage","permalink":"/zenbpm-docusaurus/reference/storage"},"next":{"title":"Configuration","permalink":"/zenbpm-docusaurus/reference/configuration"}}');var s=i(74848),t=i(28453);const a={sidebar_position:6},o="API Overview",c={},l=[{value:"Available APIs",id:"available-apis",level:2},{value:"REST API",id:"rest-api",level:2},{value:"gRPC API",id:"grpc-api",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"api-overview",children:"API Overview"})}),"\n",(0,s.jsx)(n.p,{children:"ZenBPM provides comprehensive APIs for interacting with the BPMN engine. This section documents the available APIs and how to use them."}),"\n",(0,s.jsx)(n.h2,{id:"available-apis",children:"Available APIs"}),"\n",(0,s.jsx)(n.p,{children:"ZenBPM offers two primary API interfaces:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"REST API"}),": HTTP-based API for web applications and general integration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"gRPC API"}),": High-performance RPC framework for system-to-system communication"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"rest-api",children:"REST API"}),"\n",(0,s.jsx)(n.p,{children:"The REST API follows standard RESTful principles"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["See the ",(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(72929).A+"",children:"OpenAPI specification"})]}),"\n",(0,s.jsxs)(n.li,{children:["See the ",(0,s.jsx)(n.a,{href:"/openapi-api",children:"OpenApi documentation"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"grpc-api",children:"gRPC API"}),"\n",(0,s.jsx)(n.p,{children:"The gRPC API provides similar functionality to the REST API but with the performance benefits of gRPC. It's defined using Protocol Buffers."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["See the ",(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(22214).A+"",children:"Protocol Buffer definitions "})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(96540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}},72929:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/files/api-236d7948fb260e28deeae01c35e40649.yaml"}}]);