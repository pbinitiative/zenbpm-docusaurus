"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3361],{12939:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"index","title":"ZenBPM - Go BPMN Engine","description":"ZenBPM is a next-generation Business Process Management (BPM) engine written in Go, designed to execute BPMN 2.0 process","source":"@site/docs/index.md","sourceDirName":".","slug":"/","permalink":"/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docs","next":{"title":"Tutorials","permalink":"/category/tutorials"}}');var t=s(74848),r=s(28453);const a={sidebar_position:1},c="ZenBPM - Go BPMN Engine",o={},l=[{value:"What is BPMN?",id:"what-is-bpmn",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Installation",id:"installation",level:3},{value:"Docker",id:"docker",level:3},{value:"Architecture",id:"architecture",level:2},{value:"API Reference",id:"api-reference",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"zenbpm---go-bpmn-engine",children:"ZenBPM - Go BPMN Engine"})}),"\n",(0,t.jsx)(n.p,{children:"ZenBPM is a next-generation Business Process Management (BPM) engine written in Go, designed to execute BPMN 2.0 process\ndefinitions."}),"\n",(0,t.jsx)(n.p,{children:"It provides a lightweight, cloud-ready platform for defining, deploying, and executing business processes with minimal\noverhead and maximum flexibility."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,t.jsx)(n.strong,{children:"Warning"}),": This project is in early stages and is not suitable for production use yet."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"what-is-bpmn",children:"What is BPMN?"}),"\n",(0,t.jsx)(n.p,{children:"Business Process Model and Notation (BPMN) is a graphical representation for specifying business processes in a business process model. It provides businesses with a standard notation that is readily understandable by all business stakeholders."}),"\n",(0,t.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cloud-Native Architecture"}),": Designed for cloud environments with containerization and orchestration support"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lightweight Design"}),": Minimal resource footprint with fast startup time and efficient execution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"BPMN 2.0 Support"}),": Execute standard BPMN 2.0 process definitions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"REST API"}),": Comprehensive REST API for process management"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"gRPC Interface"}),": High-performance gRPC interface for system integration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Distributed Architecture"}),": Support for clustering and distributed execution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Process Elements Support"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Start and End Events"}),"\n",(0,t.jsx)(n.li,{children:"Service Tasks"}),"\n",(0,t.jsx)(n.li,{children:"User Tasks - handled as Service Tasks"}),"\n",(0,t.jsx)(n.li,{children:"Exclusive Gateways"}),"\n",(0,t.jsx)(n.li,{children:"Inclusive Gateways"}),"\n",(0,t.jsx)(n.li,{children:"Parallel Gateways"}),"\n",(0,t.jsx)(n.li,{children:"Event-Based Gateways"}),"\n",(0,t.jsx)(n.li,{children:"Intermediate Catch and Throw Events"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Persistence"}),": Durable state storage using rqlite"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Observability"}),": Integrated with OpenTelemetry for tracing and metrics"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone git@github.com:pbinitiative/zenbpm.git\n\n# Start application\ncd zenbpm\nmake run\n\n# Run tests\nmake test\n"})}),"\n",(0,t.jsx)(n.h3,{id:"docker",children:"Docker"}),"\n",(0,t.jsx)(n.p,{children:"You can run ZenBPM in a Docker container:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker build -t zenbpm .\ndocker run -d -p 8080:8080 -p 9090:9090 --name zenbpm zenbpm\n"})}),"\n",(0,t.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)(n.p,{children:"ZenBPM is built with a modular architecture:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"BPMN Engine"}),": Core component that executes process definitions, manages process instances, and handles task execution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DMN Engine"}),": Decision Model and Notation (DMN) engine that evaluates business rules and decision tables"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Storage Layer"}),": Manages persistence of process state"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API Layer"}),": Provides REST and gRPC interfaces"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cluster Management"}),": Coordinates distributed execution"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,t.jsx)(n.p,{children:"ZenBPM provides both REST and gRPC APIs:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"REST API"}),": Documented in OpenAPI format: ",(0,t.jsx)(n.a,{href:"/openapi",children:"documentation"}),", ",(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(72929).A+"",children:"specification"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"gRPC API"}),": Defined in Protocol Buffers format: ",(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(22214).A+"",children:"specification"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},22214:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/files/zenbpm-96e88eb05778408118a5a45ead2bfcc1.proto"},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(96540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},72929:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/files/api-236d7948fb260e28deeae01c35e40649.yaml"}}]);